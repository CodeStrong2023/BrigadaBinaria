++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 2 Entidades Primitivas

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap2_ejercicio_1
	//Le pedimos al usiario que ingrese los numeros
	Escribir "Ingrese 3 valores para resolver una operacion";
	definir a,b,c,r,p Como Real;
	Escribir "valor A";
	leer a;
	escribir "valor B";
	leer b;
	Escribir "valor C";
	leer c;
	//hacemos el calculo y mostramos el resultado
	si b>a y b>c Entonces
		r <-(-b+rc(b^2-4*a*c))/(2*a);
		p <--(-b-rc(b^2-4*a*c))/(2*a);
		Escribir r;
		Escribir p;
	FinSi
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap2_ejercicio_2
	definir a, b Como Entero;
	definir resultado Como logico;
	//pedimos los valores al usuario
	leer a,b;
	//hacemos el calculo
	resultado <- ((3+5*8) < 3 y (( (-6/3)*4) + 2<2)) o (a>b);
	//mostramos resultado
	escribir resultado;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap2_ejercicio_2
	definir a,b, aux Como Entero;
	definir resultado Como logico;
	//pedimos los valores al usuario
	Escribir "Ingrese dos numeros";
	escribir sin saltar "Numero a: "; leer a;
	escribir sin saltar "Numero b: "; leer b;
	
	//intercambio de a por b
	
	aux<- a;
	a<- b;
	b<- aux;
	
	//mostramos el intercambio
	Escribir "El nuevo valor de a es:", a;
	Escribir "El nuevo valor de b es:", b;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 4 Estructuras Secuenciales

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap4_ejercicio_1
	Definir a,b,c,horas,minutos,total Como entero;
	//pedimos que ingrese los valores
	escribir "ingrese la cantidad de horas";
	leer a;
	escribir "ingrese la cantidad de minutos";
	leer b;
	escribir "ingrese la cantidad de segundos", "hola";
	leer c; 
	
	//hacemos el calculo de horas y minutos a segundos
	horas <- a*60*60;
	minutos <- b*60;
	total <- horas+minutos+c;
	
	//mostramos
	escribir "la cantidad de segundos en ", a, " horas y ", b , " minutos y ", c ," segundos son: ", total, " segundos";
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap4_ejercicio_2
	definir radio Como Entero;
	definir area,perimetro Como Real;
	
	//pedimos el radio del circulo
	escribir "ingrese el radio de un circulo";
	leer radio;
	
	//calculo
	area<- pi*radio^2;
	perimetro<- 2*pi*radio;
	
	//mostramos
	escribir "el area del circulo es: ", area, " y el perimetro es: ", perimetro;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap4_ejercicio_3
	definir a,b,c Como Entero;
	definir d,e Como Real;
	//pedimos la can. de hombres y mujeres
	escribir"ingrese la cantidad de hombres";
	leer a;
	escribir "ingrese la cantidad de mujeres";
	leer b;
	
	//calculo
	c<-a+b;
	d<-a/c*100;
	e<-b/c*100;
	
	//mostramos el resultado
	escribir "la cantidad de hombres es " ,trunc(d), "%";
	escribir "la cantidad de mujeres es ", redon(e), "%";
	
FinProceso

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap4_ejercicio_4
	definir a,b,c,ta,tb,tc,minutos,horas,total Como Entero;
	//pedimos los valores
	escribir "Ingrese la cantidad de cuestionarios A";
	leer a;
	escribir "Ingrese la cantidad de cuestionarios B";
	leer b;
	escribir "Ingrese la cantidad de cuestionarios C";
	leer c;
	
	//calculo
	ta<-a*5;
	tb<-b*8;
	tc<-c*6;
	total<-ta+tb+tc;
	horas <- trunc(total/60);
	minutos <- total mod 60;
	
	escribir "en resolver se tarda horas: ", horas , " con: ", minutos, " minutos";
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap4_ejercicio_5
	definir precio, precioTotal Como real;
	//pedimos el precio total de los productos
	escribir "Ingrese el precio total de la compra";
	leer precio;
	
	//calculo el porcentaje de descuento
	precioTotal <- precio - (precio * 0.15);
	
	//mostramos el nuevo precio 
	escribir "el precio final con un 15% de descuento es de: ",precioTotal;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap4_ejercicio_6
	definir a,b,c,d,e Como Entero;
	definir f,g,h,i,total Como Real;
	//pedimos las notas
	escribir "ingrese las tres notas parciales";
	leer a,b,c;
	escribir "ingrese la nota del examen final";
	leer d;
	escribir "ingrese la nota de un trabajo final";
	leer e;
	
	//calculos
	f<-(a+b+c)/3;
	g<-d*0.35;
	h<-e*0.15;
	i<-f*0.55;
	total <-g+h+i;
	total<-redon(g+h+i);
	
	//mostramos el resultado
	si total>6 Entonces
		escribir "el alumno aprobo con: ", total;
	SiNo
		escribir "el alumno desaprobo con: ", total;
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 5 Estructuras Condicionales

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap5_ejercicio_1
	definir num Como Entero;
	//pedimos un numero
	escribir "escribe un número para saber si es par o impar";
	leer num;
	
	//mostramos si es par o impar
	si (num mod 2==0) Entonces
		escribir "el numero es par";
	SiNo
		escribir "el numero es impar";
		
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso  cap5_ejercicio_2
	definir a,b,c,e Como Entero;
	definir g Como Real;
	//inicializamos las variables en 0
	b<-0;
	e<-0;
	a<-0;
	
	//pedimos que ingrese sus notas
	mientras a<>1 Hacer
		escribir"";
		escribir "ingrese su nota";
		leer a;
		b<- b+a;
		e<- e+1;
		g<- redon(b/e);
		escribir"";
		escribir "cantidad de notas ingresadas: ", e;
		escribir " ";
		escribir "para finalizar ingrese 1";
		escribir "para añadir otra nota ingrese 2 ";
		leer a;
	FinMientras
	
	//mostramos
	escribir "la suma de todas las notas es: ", b;
	si g>6 Entonces
		escribir "esta aprobado con un promedio de : ", g;
	SiNo
		escribir "esta desaprobado con un promedio de :", g;
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap5_ejercicio_3
	definir total Como Entero;
	definir b Como Real;
	
	//pedimos el monto a pagar
	escribir "ingrese el monto a pagar";
	leer total;
	
	//hacemos el total con un 20%  y mostramos
	si total>=100 Entonces
		b<-total-total*0.20;
		escribir "El total de su compra con un 20% de descuento es de: ", b; 
	SiNo
		escribir "El total de su compra es de: ", total;
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap5_ejercicio_4
	definir a,b,c,d,e Como Entero;
	
	//pedimos los valores
	escribir "ingrese dos números";
	Leer a,b;
	
	//hacemos el calculo y mostramo 
	si a=b Entonces
		c<-a*b;
		escribir a ," multiplicado por ", b ," es: ", c; 
	sino
		
		si a>b Entonces
			d<-a-b;
			escribir a ," menos ", b ," es: " ,d;
		SiNo
			e<-a+b;
			escribir a, " mas " ,b ," es: " ,e;
			
		FinSi
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap5_ejercicio_5
	definir a,b,c, mv Como Entero;
	
	//pedimos al usuario que ingrese 3 valores
	escribir "ingrese 3 números para saber cual es el mayor de los 3";
	leer a,b,c;
	
	//hacemos el calculo para saber cual es el mv
	si a>b y a>c Entonces
		mv<-a;
	SiNo
		si b>c entonces 
			mv<- b;
		SiNo
			mv<-c;
		FinSi
	FinSi
	
	//mostramos cual es el mayor valor
	escribir "el mayor valor es: " ,mv;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap5_ejercicio_6
	definir a,b,c Como Real;
	
	//pedimos que ingrese la cantidad de kilos 
	escribir "El kilo de manzanas cuesta 100 pesos";
	escribir "cuantos kilos de manzana desea lleva?";
	leer a;
	
	//hacemos el calculo para saber que descuento le pertenese
	// y mostramos
	si a<=2 Entonces
		//sin descuento
		b<-a*100;
		escribir "Pagara ", b, " pesos por ", a, " kilos de manzanas";
	FinSi
	si a>=2.01 y a<=5 Entonces
		//10% de descuento
		b<-a*100;
		c<-b-b*0.10;
		escribir "El total es de: ", b ," con un 10% de descuento";
		escribir "Pagara " ,c ," pesos por ", a, " kilos de manzanas";
	FinSi
	si a>=5.01 y a<=10 Entonces
		//15% de descuento
		b<-a*100;
		c<-b-b*0.15;
		escribir "El total es de: ", b, " con un 15% de descuento";
		escribir "Pagara " ,c ," pesos por ", a, " kilos de manzanas";
	FinSi
	si a>=10.01 y a<=10000 Entonces
		//20% de descuento
		b<-a*100;
		c<-b-b*0.20;
		escribir "El total es de: ", b, " con un 20% de descuento";
		escribir  "Pagara " ,c ," pesos por " ,a ," kilos de manzanas";
	FinSi
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap5_ejercicio_7
	Definir dias Como Entero;
	//pedimos que ingrese un dia(numero)
	escribir "igrese una dia";
	leer dias;
	
	//mostramos a cual corresponde
	Segun dias Hacer
		1:
			escribir "Dia Lunes";
		2:
			escribir "Dia Martes";
		3:
			escribir "Dia Miercoles";
		4:
			escribir "Dia Jueves";
		5:
			escribir "Dia Viernes";
		6:
			escribir "Dia Sabado";
		7:
			escribir "Dia Domingo";
		De Otro Modo:
			escribir "El numero no corresponde con ningun dia";
	FinSegun
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap5_ejercicio_8
	definir decada Como Entero;
	
	//pedimos que ingrese un valor
	escribir "Escriba la decada de su aniversario";
	leer decada;
	
	//segun la decada, mostramos a cual corresponde
	Segun decada Hacer
		10:
			Escribir "decada del: ", decada;
			Escribir "Su aniversario tiene el significado de Boda de Hojalata";
		20:
			Escribir "decada del: ", decada;
			Escribir "Su aniversario tiene el significado de Boda de Porcelana";
		30:
			Escribir "decada del: ", decada;
			Escribir "Su aniversario tiene el significado de Boda de Perlas";
		40:
			Escribir "decada del: ", decada;
			Escribir "Su aniversario tiene el significado de Boda de Rubí";
		50:
			Escribir "decada del: ", decada;
			Escribir "Su aniversario tiene el significado de Boda de Oro";
		60:
			Escribir "decada del: ", decada;
			Escribir "Su aniversario tiene el significado de Boda de Diamante";
		De Otro Modo:
			escribir " No coresponde a ninguna decada ";
	FinSegun
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap5_ejercicio_9
	Definir opcion,num,num2,a,b Como Entero;
	
	//pedimos al usuario que eleija una opcion
	Escribir "Elija una opción";
	Escribir "1_Elevar un número a una potencia x";
	Escribir "2_Sacar la raíz cuadrada de un número ";
	Escribir "3_Salir";
	Escribir "escriba un número";
	leer opcion;
	
	Segun opcion Hacer
		//calculo para elevar el numero ingresado 
		1:	Escribir "ingrese un número para elevarlo";
			leer num;
			escribir "A que potencia lo desea elevar?";
			leer num2;
			a<-num^num2;
			Escribir num, " elevado a ", num2, " es: ", a;
			
		//calculo para sacar la raiz del numero ingresado
		2:	Escribir "ingrese un número para sacar la raiz cuadrada";
			leer num;
			b<-raiz(num);
			escribir "La raiz cuadrada de ", num, " es: ", b;
			
		3: //si el numero no corresponde se muestra
			escribir "Ah salido";
		De Otro Modo:
			escribir "La opcion es incorrecta";
	FinSegun
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 6 Estructuras repetitivas

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_1
	definir a,b,c,num,cont Como Entero;
	
	//pedimos la cantidad de numeros
	Escribir "cuants numeros decea sumar?";
	leer b;
	
	//inicializamos las variables en 0
	a<-1;
	c<-0;
	cont<-0;
	
	//hacemos el calculo y mostramos
	escribir "ingrese los numeros a sumar";
	Repetir
		cont<-a+cont;
		escribir "numero ", cont;
		leer num;
		c<-c+num;
	Hasta Que cont==b ;
	Escribir "la suma de todos los numeros es: ", c;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_2
	definir a,b,par,impar Como Entero;
	a<-1;
	par<-0;
	impar<-0;
	
	//averiguamos si es par o impar
	mientras a<=50 Hacer
		
		si a mod 2 == 0 Entonces
			par<-par+a;
		SiNo
			impar<-impar+a;
		FinSi
		a<-a+1;
	FinMientras
	
	//mostramos el resultado
	escribir "la suma de todos los numeros pares es: ", par;
	escribir "la suma de todos los numeros impares es: ", impar;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_3
	definir num,i,c_p,c_n,c_neu Como Entero;
	//inicializamos las variables en 0
	c_p<-0;
	c_n<-0;
	c_neu<-0;
	
	//pedimos que ingrese numeros
	escribir "digite un numero: ";
	Para i<-1 Hasta 10 Con Paso 1 Hacer
		escribir  "Numero: ",i;
		leer num;
		si num=0 entonces //numeros neutros
			c_neu<-c_neu+1;
		SiNo
			si num>0 Entonces //numeros positivos
				c_p<-c_p+1;
			SiNo
				c_n<-c_n+1; //numeros negativos
			FinSi
		FinSi
		
	FinPara
	
	//mostramos
	escribir "la cantidad de numeros positivos es: ", c_p;
	escribir "la cantidad de numeros negativos es: ", c_n;
	escribir "la cantidad de numeros neutros es: ", c_neu;
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_4
	definir contador,num,suma,i,c_baja Como Entero;
	definir promedio Como Real;
	
	c_baja<-1000;
	suma<-0;
	contador<-1;
	
	//pedimos que ingrese los numeros y los sumamos
	escribir "Ingrese 10 claificaciones ";
	Para i<-1 Hasta 10 Con Paso 1 Hacer
		escribir "Calificacion ", i;
		leer num;
		suma<-num+suma;
		contador<-contador+1;
		si num<c_baja Entonces
			c_baja<-num;
		FinSi
		
	FinPara
	
	//calculo de promedio
	promedio<-suma/10;
	//mostramos
	Escribir "el promedio de notas es de: ", promedio, " y la calificacion mas baja es: ", c_baja;

FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_5
	definir num,factorial,i Como entero;
	//pedimos un numero
	Escribir "Ingrese un numero para sacar su factorial";
	leer num;
	
	factorial<-1;
	para i<-1 hasta num Con Paso 1 Hacer
		factorial<-factorial*i;
	FinPara
	
	escribir "el factorial es: ", factorial;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_6
	definir n,i,suma Como Entero;
	//pedimos la cantidad
	escribir "Digite la cantidad de elementos: ";
	leer n;
	
	i<-1;
	suma<-0;
	
	//calculo
	mientras i<= n Hacer
		suma<-suma+i^2;
		i<-i+1;
	FinMientras
	
	//mostramos
	escribir "La suma es: ", suma;
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_7
	definir a,par,impar,num,cantpar,cantimpar,promedio_par,promedio_impar Como Entero;
	a<-1;
	cantpar<-0;
	cantimpar<-0;
	par<-0;
	impar<-0;
	
	//peedimos el numero
	escribir "ingrese un numero"; 
	leer num;
	
	//calculo
	mientras a<=num Hacer
		
		si a mod 2 == 0 Entonces
			// suma,cantidad y promedio de los numeros pares
			par<-par+a;
			cantpar<-cantpar+1;
			promedio_par<-par/cantpar;
		SiNo
			// suma,cantidad y promedio de los numeros impares
			impar<-impar+a;
			cantimpar<-cantimpar+1;
			promedio_impar<-impar/cantimpar;
		FinSi
		a<-a+1;
	FinMientras
	
	//mostramos
	escribir "la cantidad de numeros pares es de: ", cantpar;
	escribir "la cantidad de numeros impares es de: ", cantimpar;
	escribir "la suma de todos los numeros pares es; ", par;
	escribir "la suma de todos los numeros impares es; ", impar;
	escribir "el promedio de todos los numeros pares es; ", promedio_par;
	escribir "el promedio de todos los numeros impares es; ", promedio_impar;
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_8
	Definir horas,tarifa,salario,suma_salario,i Como entero;
	
	suma_salario<-0;
	para i<-1 Hasta 5 con paso 1 Hacer
		escribir "Trabajador: ",i;
		escribir "horas trabajadas: "; 
		leer horas;
		escribir "le corresponde un salario de: ";
		leer salario;
		//calculo
		tarifa<-salario*horas;
		suma_salario<-tarifa+suma_salario;
		escribir "El salario de la persona ", i, " es de: ", tarifa;
	FinPara
	
	escribir "la suma total de los salarios es de: ", suma_salario;
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_9
	definir num,signo,i Como Entero;
	Definir suma Como Real;
	
	// pedimos un numero 
	escribir "Digite el valor de N ";
	leer num;
	
	suma<-0;
	signo<-1;
	i<-1;
	
	
	Repetir
		suma <- suma + signo/i;
		signo <- signo * (-1);
		i <- i + 1;
	Hasta Que i>num
	
	escribir "El resultado es: ", suma;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso  Cap6_ejercicio_10
	definir cantidad, num, num_max, num_min,i Como Entero;
	num_max<-0;
	num_min<-100000;
	
	//peddimos n numeros
	escribir "Cuantos numeros desea ingresar?";
	leer cantidad;
	
	//buscamos cual es el numero mas alto y mas bajo
	para i<-1 hasta cantidad con paso 1 Hacer
		escribir "Numero ", i;
		leer num;
		// definimos el numero mas alto
		si num>num_max Entonces
			num_max<-num;
		FinSi
		//definimos el numero mas bajo
		si num<num_min Entonces
			num_min<-num;
		FinSi
	FinPara
	
	//mostramos el resultado
	Escribir "el numero mas alto es: ", num_max;
	Escribir "el numero mas bajo es: ", num_min;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_11
	definir num, cantidad, fibonacci,aux,i Como Entero;
	fibonacci<-0;
	cantidad<-1;
	
	//pedimos un num para saber hasta donde hacer la secuencia
	escribir "Escribe un número";
	leer num;
	
	//mostramos la secuencia
	escribir "La secuencia de Fibonaccia hasta el ", num, " es:";
	para i<-0 hasta num con paso 1 Hacer
		escribir fibonacci;
		aux<-fibonacci+cantidad;
		fibonacci<-cantidad;
		cantidad<-aux;
	FinPara
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap6_ejercicio_12
	definir num,i,factorial Como Entero;
	definir numx,suma,potencia Como Real;
	
	escribir "Digite el valor del numero: ";
	leer num;
	
	Escribir "Digite el valor del numero x: ";
	leer numx;

	suma<-1;
	i<-1;
	factorial<-1;

	repetir 
		factorial<- factorial*i;
		potencia<- numx^i;
		suma<- suma + potencia/factorial;
		i<-i+1;
	Hasta Que i>num

	escribir "La sumatoria final es: ",suma; 
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 7 Arreglos 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercicio_1
	definir arreglo,promedio,suma,i Como Entero;
	suma<-0;
	dimension arreglo[5];
	Escribir "Ingrese 5 números";
	para i<-0 hasta 4 con paso 1 Hacer
		escribir "ingrese un número";
		leer arreglo[i];
		suma<-arreglo[i]+suma;
	FinPara
	para i<-0 hasta 4 con paso 1 Hacer
		Escribir  arreglo[i];
	FinPara
	Escribir "la suma de todos los números es: ", suma;
	promedio<-suma/5;
	Escribir "el promedio de todos los números es: ",promedio; 
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercicio_2
	definir num, arreglo,i Como Entero;
	Dimension arreglo[100];
	escribir "escriba el número de elementos para el arreglo: ";
	leer num;
	para i<-0 Hasta num-1 con paso 1 Hacer
		arreglo[i]<-azar(100);
	FinPara
	para i<-0 Hasta num-1 con paso 1 Hacer
		escribir arreglo[i];
	FinPara
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercicio_3
	definir num,i Como Entero;
	definir arreglo Como Caracter;
	Dimension arreglo[100];
	escribir "ingrese la cantidad de caracteres ";
	leer num;
	para i<-0 hasta num-1 con paso 1 Hacer
		escribir "ingrese el caracter: ", i+1;
		leer arreglo[i];
	FinPara
	para i<-num-1 hasta 0 con paso -1 Hacer
		Escribir arreglo[i];
	FinPara
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercicio_4
	definir num, arreglo,i,mayor,menor Como Entero;
	Dimension arreglo[100];
	escribir "escriba el número de elementos para el arreglo: ";
	leer num;
	para i<-0 Hasta num-1 con paso 1 Hacer
		escribir "ingrese un número ",i+1;
		leer arreglo[i];
	FinPara
	mayor <- arreglo[0];
	menor <- arreglo[0];
	para i<-1 hasta num-1 con paso 1 Hacer
		si arreglo[i]>mayor Entonces
			mayor<-arreglo[i];
		SiNo
			si arreglo[i]<menor Entonces
				menor<-arreglo[i];
			FinSi
		FinSi
		
	FinPara

	
	escribir "El número mas grande del arreglo es: ", mayor;
	escribir "El número mas grande del arreglo es: ", menor;

FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercicio_5
	definir arreglo,i Como Entero;
	
	dimension arreglo[8];
	Escribir "Ingrese 8 números ";
	para i<-0 hasta 7 con paso 1 Hacer
		escribir "ingrese un número ",i+1;
		leer arreglo[i];
	FinPara
	para i<-0 hasta 3 con paso 1 Hacer
		Escribir  arreglo[i];
		Escribir  arreglo[7-i];
	FinPara
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercicio_6
	Definir num,arreglo,i Como Real;
	Definir creciente,decreciente Como Logico;
	Escribir 'ingrese 5 numeros';
	Dimension arreglo[5];
	creciente <- falso;
	decreciente <- falso;
	
	para i<-0 hasta 4 con paso 1 Hacer
		Escribir 'Ingrese el numero: ',i+1;
		Leer arreglo[i];
	FinPara
	
	Para i<-0 Hasta 3 con paso 1 Hacer
		Si arreglo[i]<arreglo[i+1] Entonces
			creciente <- Verdadero;
		FinSi
		Si arreglo[i]>arreglo[i+1] Entonces
			decreciente <- Verdadero;
		FinSi
	FinPara
	
	Si creciente=Verdadero Y decreciente=falso Entonces
		Escribir 'El arreglo esta en forma creciente';
	SiNo
		Si creciente=falso Y decreciente=Verdadero Entonces
			Escribir 'El arreglo esta en forma decreciente';
		SiNo
			Escribir 'El arreglo esta en forma desordenada';
		FinSi
	FinSi

FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercicio_7
	definir arreglo,ultimo,i Como Entero;
	Dimension arreglo[6];
	Escribir "ingrese 6 números: ";
	para i<-0 hasta 5 con paso 1 Hacer
		escribir "Ingrese el número ", i+1;
		leer arreglo[i];
	FinPara
	
	ultimo<-arreglo[5];
	
	para i<-4 hasta 0 con paso -1 Hacer
		arreglo[i+1]<-arreglo[i];
	FinPara
	
	arreglo[0]<-ultimo;
	
	Escribir "El nuevo arrreglo es: ";
	para i<-0 hasta 5 con paso 1 Hacer
		escribir arreglo[i];
	FinPara

FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercio_8
	Definir arreglo,dato,i,posicion,j Como Entero;
	Definir creciente Como Logico;
	Dimension arreglo[6];
	
	Repetir
		creciente <- verdadero;
		Para i<-0 Hasta 4 Hacer
			Escribir 'Digite un número: ',(i+1);
			Leer arreglo[i];
		FinPara
		
		Para i<-0 Hasta 3 Hacer
			Si arreglo[i]>arreglo[i+1] Entonces
				Escribir creciente=falso;
			FinSi
		FinPara
		
		Si creciente=falso Entonces
			Escribir 'El arrelgo no esta ordenado, digite nuevamente';
		FinSi
		
	Hasta Que creciente=verdadero
	
	Escribir 'digite un valor a agregar';
	Leer dato;
	posicion <- 0;
	j <- 0;
	
	Mientras arreglo[j] < dato y j<5 Hacer
		posicion <- posicion + 1;
		j <- j + 1;
	FinMientras
	
	Para i<-4 Hasta posicion Con Paso -1 Hacer
		arreglo[i+1]<-arreglo[i];
	FinPara
	
	arreglo[posicion] <- dato;
	Escribir '';
	Escribir 'El nuevo arrelo es: ';
	
	Para i<-0 Hasta 5 Hacer
		Escribir arreglo[i];
	FinPara
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap7_ejercio_9
	definir arreglo,posicion,i Como Entero;
	Dimension arreglo[5];
	escribir "digite 5 números para el arreglo: ";
	para i<-0 hasta 4 con paso 1 hacer 
		escribir "Número ", (i+1);
		leer arreglo[i];
	FinPara
	
	Repetir
		escribir "Digite una posición: ";
		leer posicion;
	Hasta Que posicion >= 0 y posicion <= 4
	
	para i<-posicion hasta 3 con paso 1 hacer 
		arreglo[i]<-arreglo[i+1];
	FinPara
	
	para i<-0 hasta 3 con paso 1 Hacer
		Escribir "El nuevo arreglo es: ", arreglo[i];
	FinPara
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso cap7_ejercicio_10
	definir arreglo1, arreglo2, arreglo3, i,j,k Como Entero;
	definir creciente Como Logico;
	dimension arreglo1[5];
	dimension arreglo2[5];
	Dimension arreglo3[10];
	//Definimos las variables a utilizar y luego le pedimos al usuario que ingrese los datos para los arreglos
	escribir "Ingrese los números para el prmer arreglo";
	
	
	Repetir
		//comprobamos si el arreglo esta ordenado 
		creciente<-Verdadero;
		escribir "ingrese los datos para el arreglo 1 ";
		para i<-0 hasta 4 con paso 1 hacer 
			escribir "Numero ", i;
			leer arreglo1[i];
		FinPara
		
		para i<-0 hasta 3 con paso 1 Hacer
			si arreglo1[i]> arreglo1[i+1] Entonces
				creciente <- falso;
			FinSi
		FinPara
		
		si creciente = falso entonces
			Escribir "Arreglo desordenado, vualva a ingresarlo";
		FinSi
		
	Hasta Que creciente = Verdadero
	
	//segundo arreglo
	
	Repetir
		//comprobamos si el arreglo esta ordenado 
		creciente<-Verdadero;
		escribir "ingrese los datos para el arreglo 2 ";
		para j<-0 hasta 4 con paso 1 hacer 
			escribir "Numero ", j;
			leer arreglo2[j];
		FinPara
		
		para j<-0 hasta 3 con paso 1 Hacer
			si arreglo2[j]> arreglo2[j+1] Entonces
				creciente <- falso;
			FinSi
		FinPara
		
		si creciente = falso entonces
			Escribir "Arreglo desordenado, vualva a ingresarlo";
		FinSi
		
	Hasta Que creciente = verdadero
	
	i<- 0;
	j<- 0;
	k<- 0;
	
	Mientras (i<5 y j<5) Hacer
		si arreglo1[i] < arreglo2[j] Entonces
			arreglo3[k] <- arreglo1[i];
			i <- i +1;
		SiNo
			arreglo3[k] <- arreglo2[j];
			j<- j+1;
		FinSi
		k <- k +1;
	FinMientras
	
	si (i=5) Entonces
		Mientras (j<5) hacer 
			arreglo3[k]<- arreglo2[j];
			j<- j+1;
			k<- k+1;
		FinMientras
	SiNo
		si (j=5) Entonces
			Mientras (i<5) Hacer
				arreglo3[k]<- arreglo1[i];
				i<- i+1;
				k<- k+1;
				
			FinMientras
		FinSi
	FinSi
	
	// Ahora mostramos el arreglo 3
	
	para i<-0 hasta 9 con paso 1 hacer 
		escribir i, " elemento :", arreglo3[i];
	FinPara
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 8 Ordenamiento

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Ordenamiento_Burbuja
	Definir arreglo, i, j, aux Como Entero;
	Dimension arreglo[5];
	definir ordenado Como Logico;
	
	escribir "Ingrese los valores";
	para i<-0 hasta 4 con paso 1 hacer 
		escribir (i+1), " Numero; ";
		leer arreglo[i];
	FinPara
	
	//Algoritmo del metodo burbuja
	ordenado<- falso;
	i<- 0;
	
	mientras (ordenado = falso y i<=3) hacer
		ordenado <- Verdadero;
		para j<-0 hasta 3 con paso 1 Hacer
			si arreglo[j]>arreglo[j+1] Entonces
				aux<- arreglo[j];
				arreglo[j]<- arreglo[j+1];
				arreglo[j+1]<- aux;
				ordenado <-falso;
			FinSi
		FinPara
		i<- i+1;
	FinMientras
	
	
	//En orden acendente
	escribir "El arreglo ordenado de forma acendente: ";
	para i<-0 Hasta 4 con paso 1 hacer 
		escribir arreglo[i];
	FinPara
	escribir "";
	
	//En orden decendente
	escribir "El arreglo ordenado de forma decendente: ";
	para i<-4 Hasta 0 con paso -1 hacer 
		escribir arreglo[i];
	FinPara
	escribir "";
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Ordenamiento_Insercion 
	definir arreglo, i, aux, pos como enteros;
	Dimension arreglo[5];
	
	escribir "Digite los numeros para el arreglo";
	para i<-0 Hasta 4 con paso 1 Hacer
		escribir (i+1), " Numero: ";
		leer arreglo[i];
	FinPara
	
	//Algoritmo del metodo de inserción
	
	para i<-1 hasta 4 con paso 1 hacer 
		pos<-i;
		aux <- arreglo[i];
		Mientras (pos>0 y arreglo[pos-1]>aux) Hacer
			arreglo[pos] <- arreglo[pos-1];
			pos<- pos-1;
		FinMientras
		arreglo[pos] <- aux;
	FinPara
	Escribir "";
	
	//En orden acendente
	escribir "El arreglo ordenado de forma acendente: ";
	para i<-0 Hasta 4 con paso 1 hacer 
		escribir arreglo[i];
	FinPara
	escribir "";
	
	//En orden decendente
	escribir "El arreglo ordenado de forma decendente: ";
	para i<-4 Hasta 0 con paso -1 hacer 
		escribir arreglo[i];
	FinPara
	escribir "";

FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Ordenamiento_Seleccion
	Definir arreglo, i, j,aux, min Como Entero;
	Dimension arreglo[5];
	
	escribir "Digite los numeros para el arreglo";
	para i<-0 Hasta 4 con paso 1 Hacer
		escribir (i+1), " Numero: ";
		leer arreglo[i];
	FinPara
	
	//Algoritmo del metodo de selección
	para i<-0 hasta 3 con paso 1 Hacer
		min<-i;
		para j<-i+1 hasta 4 con paso 1 Hacer
			si arreglo[j] < arreglo[min] Entonces
				min <- j;
			FinSi
		FinPara
		aux <- arreglo[i];
		arreglo[i] <- arreglo[min];
		arreglo[min] <- aux;
	FinPara
	
	//En orden acendente
	escribir "El arreglo ordenado de forma acendente: ";
	para i<-0 Hasta 4 con paso 1 hacer 
		escribir arreglo[i];
	FinPara
	escribir "";
	
	//En orden decendente
	escribir "El arreglo ordenado de forma decendente: ";
	para i<-4 Hasta 0 con paso -1 hacer 
		escribir arreglo[i];
	FinPara
	escribir "";
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 9 Búsqueda

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Proceso Cap9_Busqueda_Secuencial
	definir num,i,dato,posicion Como Entero;
	definir encontrado Como Logico;
	Dimension num[5];
	encontrado <- falso;
	
	//Pedimos los datos al usuario para el arreglo
	escribir "Ingrese los valores para el arreglo";
	para i<-0 hasta 4 con paso 1 Hacer
		escribir "Numero ", i;
		leer num[i];
	FinPara
	
	//Le pedimos que ingrese un elemento a encontrar
	Escribir "Ingrese un elemento a encontrar";
	leer dato;
	
	encontrado<- falso;
	i<- 0;
	
	//Algoritmo de busqueda de dato
	mientras (i<5 y encontrado=falso) Hacer
		si (num[i]=dato) Entonces
			encontrado <- Verdadero;
			posicion <- i;
		FinSi
		i<- i+1;
	FinMientras
	
	//Mostramos
	si encontrado=Verdadero Entonces
		escribir "Elemento encontrado en la posición ", posicion;
	SiNo
		Escribir "Elemento no encontrado";
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap9_Busqueda_Binaria
	Definir num,dato,inf,sup,i, posicion Como Entero;
	definir mitad Como Real;
	Dimension num[5];
	definir encontrado, creciente Como Logico;
	
	//pedimos los datos al usuario
	escribir "Ingrese los valores para el arreglo de forma ascendente ";
	Repetir
		creciente<- verdadero;
		para i<-0 hasta 4 con paso 1 hacer 
			escribir (i), " Numero ";
			leer num[i];
		FinPara
		
		// comprobamos si esta de forma creciente
		para i<-0 hasta 3 con paso 1 Hacer
			si num[i]>num[i+1] Entonces
				creciente <- falso;
				Escribir " Arreglo desordenado, ingrese nuevamente los valores";
			FinSi
		FinPara
	Hasta Que creciente=Verdadero
	
	//Algoritmo de buqueda binaria
	
	escribir "Ingrese un dato a buscar";
	leer dato;
	
	encontrado<- falso;
	i<- 0;
	inf<- 0;
	sup<- 5;
	mitad<- trunc((inf+sup)/2);
	

	mientras (inf<=sup y i<5 y encontrado=falso) Hacer
		si (num[mitad] = dato) Entonces
			encontrado <- Verdadero;
			posicion <- mitad;
		SiNo
			si (num[mitad] > dato)Entonces
				sup<-mitad;
				mitad<- trunc((inf+sup)/2);
			SiNo
				inf<-mitad;
				mitad<- trunc((inf+sup)/2);
			FinSi
		FinSi
		i<- i+1;
	FinMientras
	
	si (encontrado= verdadero) Entonces
		escribir "El elemento ha sido encontrado en la psocición ", posicion;
	SiNo
		escribir "El elemento no ha sido encontrado";
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap9_Busqueda_Secuencial
	definir num,i,dato,posicion Como Entero;
	definir encontrado Como Logico;
	Dimension num[5];
	encontrado <- falso;
	
	//Pedimos los datos al usuario para el arreglo
	escribir "Ingrese los valores para el arreglo";
	para i<-0 hasta 4 con paso 1 Hacer
		escribir "Numero ", i;
		leer num[i];
	FinPara
	
	//Le pedimos que ingrese un elemento a encontrar
	Escribir "Ingrese un elemento a encontrar";
	leer dato;
	
	encontrado<- falso;
	i<- 0;
	
	//Algoritmo de busqueda de dato
	mientras (i<5 y encontrado=falso) Hacer
		si (num[i]=dato) Entonces
			encontrado <- Verdadero;
			posicion <- i;
		FinSi
		i<- i+1;
	FinMientras
	
	//Mostramos
	si encontrado=Verdadero Entonces
		escribir "Elemento encontrado en la posición ", posicion;
	SiNo
		Escribir "Elemento no encontrado";
	FinSi
	
FinProceso

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 10 Cadenas de caracteres

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Proceso Cap10_ejercicio_1
	definir frase, vocales como cadena;
	definir i,j,cantvocales Como Entero;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	
	//pasamos la frase a minuscula
	frase<- Minusculas(frase);
	
	vocales<-"aeiou";
	cantvocales<- 0;
	
	para i<-0 hasta (Longitud(frase)-1) con paso 1 Hacer
		para j<-0 hasta (Longitud(vocales)-1) con paso 1 Hacer
			si (Subcadena(frase,i,i) = Subcadena(vocales,j,j)) Entonces
				cantvocales <- cantvocales+1;
			FinSi
		FinPara
	FinPara
	
	Escribir "La cantidad de vocales en la cadena es: ", cantvocales;

FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_2
	definir frase,frase2, aux como cadena;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	escribir "Ingrese otra cadena de texto";
	leer frase2;
	
	si Longitud(frase) = Longitud(frase2) Entonces
		Escribir "Ambas cadenas son igulases";
	SiNo
		si Longitud(frase)>Longitud(frase2) Entonces
			Escribir "La cadena mas larga es: ", frase, " con ", Longitud(frase), " caracteres";
		SiNo
			Escribir "La cadena mas larga es: ", frase2 , " con ", Longitud(frase2), " caracteres";
		FinSi
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_3
	Definir frase como cadena;
	definir num,i como entero;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	
	escribir "Ingrese un numero";
	leer num;
	
	para i<-0 hasta num Hacer
		Escribir frase;
	FinPara
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_4
	definir frase,frase2 Como Cadena;
	definir i como entero;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	
	i<- 0;
	frase2<- "";
	
	mientras (i<Longitud(frase)) hacer 
		
		si Subcadena(frase,i,i) = " " Entonces
			i<- i+1;
		SiNo
			frase2<- Concatenar(frase2,Subcadena(frase,i,i));
			i<- i+1;
		FinSi
		
	FinMientras
	
	frase<- frase2;
	Escribir "La cadena sin espacios es: ",frase; 
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_5
	
	Definir frase,frase2 como cadena;
	definir i como entero;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	
	frase2 <- "";
	
	para i<-(Longitud(frase)-1) hasta 0 con paso -1 Hacer
		frase2<- Concatenar(frase2,Subcadena(frase,i,i));
	FinPara
	
	frase<-frase2;
	
	Escribir "La cadena al reves es: ",frase2; 
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_6
	
	Definir frase,frase2, reversa como cadena;
	definir i como entero;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	
	i<- 0;
	frase2<- "";
	
	mientras i<Longitud(frase) Hacer
		si Subcadena(frase,i,i) <> " " Entonces
			frase2<- Concatenar(frase2,Subcadena(frase,i,i));
			i<- i+1;
		SiNo
			i<-i+1;
		FinSi
	FinMientras
	
	frase<- frase2;
	
	reversa<- "";
	para i<-(Longitud(frase)-1) hasta 0 con paso -1 Hacer
		reversa<- Concatenar(reversa, Subcadena(frase,i,i));
	FinPara
	//comparamos las cadenas
	si frase = reversa Entonces
		Escribir "La cadena es un palindromo";
	sino
		escribir "La cadena NO es un palindromo";
	FinSi
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_7
	
	Definir frase,frase2 como cadena;
	definir i como entero;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	
	frase2<- "";
	
	//transformamos el primer caracter de la cadena a mayuscula
	frase2<- Concatenar(frase2,Mayusculas(Subcadena(frase,0,0)));
	
	i<- 1;
	
	Mientras i<Longitud(frase) hacer 
		si Subcadena(frase,i,i) <> " " Entonces
			frase2<- Concatenar(frase2,Subcadena(frase,i,i));
			i <- i+1;
		SiNo
			mientras Subcadena(frase,i,i) = " " Hacer
				frase2<- Concatenar(frase2, " ");
				i <- i+1;
			FinMientras
			frase2<- Concatenar(frase2,Mayusculas(Subcadena(frase,i,i)));
			i<- i+1;
		FinSi
	FinMientras
	
	frase<- frase2;
	Escribir frase2;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_8
	Definir frase,frase2 como cadena;
	definir i como entero;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	
	frase2<- "";
	
	para i<-0 hasta (Longitud(frase)-1) hacer 
		si subcadena(frase,i,i) <> " " Entonces
			frase2 <- Concatenar(frase2,Subcadena(frase,i,i));
		SiNo
			frase2 <- Concatenar(frase2,"*");
		FinSi
	FinPara
	
	frase<- frase2;
	escribir frase;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_9
	definir frase,letra como cadena;
	definir i,contA,contE, contI, contO, contU Como Entero;
	
	escribir "Ingrese una cadena de texto";
	leer frase;
	
	//pasamos la frase a minuscula
	frase<- Minusculas(frase);
	
	contA<- 0;
	contE<- 0;
	contI<- 0;
	contO<- 0;
	contU<- 0;
	
	
	para i<-0 hasta (Longitud(frase)-1) Hacer
		letra<- subcadena(frase,i,i);
		si letra = "a" Entonces
			contA<- contA +1;
		SiNo
			si letra = "e" Entonces
				contE<- contE +1;
			SiNo
				si letra = "i" Entonces
					contI<- contI +1;
				SiNo
					si letra = "o" Entonces
						contO<- contO +1;
					SiNo
						si letra = "u" Entonces
							contU<- contU +1;
						FinSi
					FinSi
				finsi
			FinSi
		FinSi
	FinPara
	
	Escribir "La cantidad de vocales A es: ", contA;
	Escribir "La cantidad de vocales E es: ", contE;
	Escribir "La cantidad de vocales I es: ", contI;
	Escribir "La cantidad de vocales O es: ", contO;
	Escribir "La cantidad de vocales U es: ", contU;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap10_ejercicio_10
	definir i,contador Como Entero;
	definir frase,subfrase, palabra como cadenas;
	
	Escribir "Digite una cadena";
	leer frase;
	Escribir "Digite una palabra a buscar en la frase";
	leer subfrase;
	
	i<-0;
	contador<-0;
	
	mientras i<Longitud(frase) Hacer
		palabra <- " ";
		si Subcadena(frase,i,i) <> " " Entonces
			mientras subcadena(frase,i,i) <> " " y i<Longitud(frase) Hacer
				palabra<- Concatenar(palabra,subcadena(frase,i,i));
				i<- i+1;
			FinMientras
			
			si palabra = subfrase Entonces
				contador<- contador + 1;
			FinSi
		SiNo
			
			mientras Subcadena(frase,i,i) = " " y i<Longitud(frase) Hacer
				i<-i+1;
			FinMientras
		FinSi
		i<-i+1;
	FinMientras
	
	Escribir "La palabra ",subfrase," se repite ", contador, " veces";
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 11 Matrices

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap11_ejercicio_1
	definir matriz,i,j,suma Como Entero;
	Dimension matriz[3,4];
	
	//Pedimos al usuario los datos
	para i<-0 hasta 2 con paso 1 hacer 
		para j<-0 Hasta 3 con paso 1 Hacer
			escribir Sin Saltar"Ingrese un número", "[",i,"][", j, "]";
			leer matriz[i,j];
		FinPara
	FinPara
	Escribir "";
	
	//Mostramos los elementos
	para i<-0 hasta 2 con paso 1 hacer 
		para j<-0 Hasta 3 con paso 1 Hacer
			escribir sin saltar matriz[i,j];
			escribir sin saltar" ";
		FinPara
		escribir "";
	FinPara
	
	//hacemos la suma de los valores pares
	suma<-0; 
	para i<-0 hasta 2 con paso 1 Hacer
		para j<-0 Hasta 3 con paso 1 Hacer
			si matriz[i,j] mod 2 =0 Entonces
				suma <- suma+ matriz[i,j];
			FinSi
		FinPara
	FinPara
	
	//mostramos el resultado
	Escribir "";
	Escribir "La suma de todos los numeros pares es: ", suma;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap11_ejercicio_2
	definir matriz,i,j,mayor,posfila,poscolumna Como Entero;
	Dimension matriz[4,4];
	mayor<- 0;
	
	//completamos la matris con numeros al azar
	para i<-0 Hasta 3 con paso 1 Hacer
		para j<-0 hasta 3 con paso 1 Hacer
			matriz[i,j]<- azar(50);
		FinPara
	FinPara
	
	// mostramos los elementos
	para i<-0 hasta 3 con paso 1 hacer 
		para j<-0 Hasta 3 con paso 1 Hacer
			escribir sin saltar matriz[i,j];
			escribir sin saltar"  ";
		FinPara
		escribir " ";
	FinPara
	
	//mostramos en que posicion esta el número mas grande
	para i<-0 hasta 3 con paso 1 hacer 
		para j<-0 Hasta 3 con paso 1 Hacer
			si matriz[i,j]> mayor Entonces
				mayor<- matriz[i,j];
				posfila<- i;
				poscolumna<- j;
			FinSi
		FinPara
	FinPara
	
	//mostramos el numero mayor
	Escribir "";
	escribir "El número mas grande de la matriz ", mayor, " se encuentra en la fila ", posfila, " y en la columna ", poscolumna;
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap11_ejercicio_3
	// definimos todas las variables a utilizar
	Definir matriz,i,j Como Entero;
	Dimension matriz[4,4];
	Definir filas,sumafila,posfila Como Entero;
	Dimension filas[4];
	Definir columnas,sumacolumnas,poscolumnas Como Entero;
	Dimension columnas[4];
	// completamos la matris con numeros al azar
	Para i<-0 Hasta 3 Hacer
		Para j<-0 Hasta 3 Hacer
			matriz[i,j]<-azar(10);
		FinPara
	FinPara
	// mostramos los elementos
	Para i<-0 Hasta 3 Hacer
		Para j<-0 Hasta 3 Hacer
			Escribir matriz[i,j] Sin Saltar;
			Escribir '  ' Sin Saltar;
		FinPara
		Escribir ' ';
	FinPara
	// hacemos el algoritmo de suma de las filas
	posfila <- 0;
	Para i<-0 Hasta 3 Hacer
		sumafila <- 0;
		Para j<-0 Hasta 3 Hacer
			sumafila <- sumafila+matriz[i,j];
		FinPara
		filas[posfila] <- sumafila;
		posfila <- posfila+1;
	FinPara
	
	// hacemos el algoritmo de suma de las columnas
	poscolumnas <- 0;
	Para j<-0 Hasta 3 Hacer
		sumacolumnas <- 0;
		Para i<-0 Hasta 3 Hacer
			sumacolumnas <- sumacolumnas+matriz[i,j];
		FinPara
		columnas[poscolumnas] <- sumacolumnas;
		poscolumnas <- poscolumnas+1;
	FinPara
	
	//mostramos la suma de las filas
	escribir "";
	Escribir 'La suma de las filas es: ';
	
	Escribir  filas[0];
	Escribir  filas[1];
	Escribir  filas[2];
	Escribir  filas[3];
	
	//mostramos la suma de las columnas
	escribir "";
	Escribir 'La suma de las columnas es: ';
	para j<-0 hasta 3 con paso 1 Hacer
		Escribir Sin Saltar columnas[j]," ";
	FinPara

FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap11_ejercicio_4
	definir matriz,i,j,mayor,columnas,sumacolumnas,poscolumnas Como Entero;
	Dimension matriz[3,4];
	dimension columnas[4];
	mayor<- 0;
	
	//completamos la matris con numeros al azar
	para i<-0 Hasta 2 con paso 1 Hacer
		para j<-0 hasta 3 con paso 1 Hacer
			matriz[i,j]<- azar(50);
		FinPara
	FinPara
	
	// mostramos los elementos
	para i<-0 hasta 2 con paso 1 hacer 
		para j<-0 Hasta 3 con paso 1 Hacer
			escribir sin saltar matriz[i,j];
			escribir sin saltar"  ";
		FinPara
		escribir " ";
	FinPara
	
	//algoritmo que suma las columnas 
	poscolumnas <- 0;
	Para j<-0 Hasta 3 Hacer
		sumacolumnas <- 0;
		Para i<-0 Hasta 2 Hacer
			sumacolumnas <- sumacolumnas+matriz[i,j];
		FinPara
		columnas[poscolumnas] <- sumacolumnas;
		poscolumnas <- poscolumnas+1;
	FinPara
	
	//mostramos la suma de las columnas
	escribir "";
	Escribir 'La suma de las columnas es: ';
	para j<-0 hasta 3 con paso 1 Hacer
		Escribir Sin Saltar columnas[j]," ";
	FinPara
	escribir "";
	
	//buscamos cual es la suma mas grande
	para j<-0 Hasta 3 con paso 1 Hacer
		si columnas[j]> mayor Entonces
			mayor<- columnas[j];
			poscolumnas<- j;
		FinSi
	FinPara
	
	//mostramos el resultado
	Escribir "La columna con la mayor suma es: ",mayor," n la columna: ", poscolumnas;

FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap11_ejercicio_5
	definir matriz, i,j, arreglo Como Entero;
	Dimension matriz[4,4],arreglo[4];
	definir pos Como Entero;
	
	//ingresamos los elementos de la matriz en forma aleatoria
	para i<-0 hasta 3 con paso 1 hacer 
		para j<-0 hasta 3 con paso 1 hacer 
			matriz[i,j] <- azar(10);
		FinPara
	FinPara
	
	//mostrmos la matriz
	para i<-0 hasta 3 con paso 1 hacer 
		para j<-0 hasta 3 con paso 1 hacer 
			escribir sin saltar " ", matriz[i,j];
		FinPara
		escribir "";
	FinPara
	
	//recorremos la matriz y copiamos la diagonal
	pos<- 0;
	para i<-0 hasta 3 con paso 1 hacer 
		para j<-0 hasta 3 con paso 1 hacer 
			si i=j Entonces
				arreglo[pos] <- matriz[i,j];
				pos <- pos + 1;
			FinSi
		FinPara
	FinPara
	
	//mostramos los elementos de la diagonal 
	Escribir "Los elementos de la diagonal son: ";
	para i<-0 hasta 3 con paso 1 hacer 
		escribir sin saltar arreglo[i], " ";
	FinPara
	escribir " ";
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap11_ejercicio_6
	definir matriz, i,j Como Entero;
	Dimension matriz[5,5];
	
	//ingresamos los elementos de la matriz en forma aleatoria
	para i<-0 hasta 4 con paso 1 hacer 
		para j<-0 hasta 4 con paso 1 hacer 
			si i=j Entonces
				matriz[i,j] <-1;
			SiNo
				matriz[i,j] <-0;
			FinSi
		FinPara
	FinPara
	escribir "";
	
	//mostramos la matriz
	para i<-0 hasta 4 con paso 1 Hacer
		para j<-0 hasta 4 con paso 1 Hacer
			escribir sin saltar matriz[i,j], " ";
			
		FinPara
		escribir "";
	FinPara
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



Proceso Cap11_ejercicio_7
	// Ejercicio 7 rellenar una matriz
	//hacer un programa para rellenar una matriz pidiendo al usuario
	//el numero de filas y columnas, posteriormente mostrar laa patriz
	// en pantalla.
	
	definir matriz,i,j,filas,columnas Como Entero;
	Dimension matriz[100,100];
	
	//le pedimos al usuario que ingrese la cantidad de filas y columnas
	Escribir "Ingrese la cantidad de filas ";
	leer filas;
	Escribir "Ingrese la cantidad de columnas ";
	leer columnas;
	
	//ingresamos los valores de forma aleatoria;
	para i<-0 hasta filas-1 con paso 1 Hacer
		para j<-0 hasta columnas-1 con paso 1 Hacer
			matriz[i,j]<- azar(10);
		FinPara
	FinPara
	
	//mostramos la matriz
	para i<-0 hasta filas-1 con paso 1 Hacer
		para j<-0 hasta columnas-1 con paso 1 Hacer
			Escribir sin saltar "  ", matriz[i,j];
		FinPara
		escribir "";
	FinPara

FinProceso



Proceso Cap11_ejercicio_8
	//Ejercicio 8: mostrar la diagonal principal de una matriz
	//realizar un programa que defina una matriz de 3*3 y escriba un
	//ciclo para que muestre la diagonal principal de la matriz.
	definir i,j,diagonal Como Entero;
	definir matriz Como Caracter;
	Dimension matriz[3,3];
	
	para i<-0 hasta 2 con paso 1 Hacer
		para j<-0 hasta 2 con paso 1 Hacer
			Escribir sin saltar "Ingrese los números ", "[", i, "][", j, "]";
			leer matriz[i,j];
		FinPara
	FinPara
	
	
	para i<-0 hasta 2 con paso 1 Hacer
		para j<-0 hasta 2 con paso 1 Hacer
			Escribir sin saltar " ", matriz[i,j];
		FinPara
		Escribir "";
	FinPara
	

	//algoritmo para mostrar la diagonal	
	escribir"La diagonar principal de la matriz es: ";
	para i<-0 hasta 2 con paso 1 Hacer
		para j<-0 hasta 2 con paso 1 Hacer
			si i=j Entonces
				escribir Sin Saltar matriz[i,j];
			SiNo
				si i<>j Entonces
					matriz[i,j] <- " ";
					Escribir Sin Saltar matriz[i,j];
				FinSi
			FinSi
		FinPara
		Escribir "";
	FinPara
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap11_ejercicio_9
	//Ejercicio 9: copiar una matriz a otra
	//hacer una matriz de tipo entera de 2*2, llenarla de numeros y
	//luego copiar todo su contenido hacia otra matriz
	definir matriz1,matriz2,i,j Como Entero;
	Dimension matriz1[2,2],matriz2[2,2];
	
	//ingresamos los valores para la matriz1
	escribir "Ingrese los valores para la primera matriz";
	para i<-0 hasta 1 Hacer
		para j<-0 hasta 1 Hacer
			escribir sin saltar "Ingrese los números ", "[", i, "][", j, "]";
			leer matriz1[i,j];
		FinPara
	FinPara
	escribir "";
	
	//copiamos la matriz 1 a la segunda matriz
	
	para i<-0 hasta 1 Hacer
		para j<-0 hasta 1 Hacer
			matriz2[i,j] <- matriz1[i,j];
			si i=0 y j=0 Entonces
				// usar 12 espacios para separar del borde
				escribir sin saltar "            ", matriz2[i,j]," ";
			SiNo
				si i=1 y j=0 Entonces
					escribir Sin Saltar "            ", matriz2[i,j]," ";
				SiNo
					escribir matriz2[i,j]," ";
				FinSi
			FinSi
		FinPara
	FinPara
	escribir "";
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Proceso Cap11_ejercicio_10
	//Ejercicio 10: llenar una matriz de numeros aleatorios
	//hacer una matriz preguntando al usuario el numero de filas y columnas
	//llenar con numeros aleatorios, copiar el contenido a otra matriz y
	//por ultimo mostrarla en pantalla.
	
	definir matriz1,matriz2,i,j,filas,columnas Como Entero;
	Dimension matriz1[100,100],matriz2[100,100];
	
	//pedimos los valores
	escribir"ingrese la cantidad de filas para la matriz";
	leer filas;
	
	escribir"ingrese la cantidad de columnas para la matriz";
	leer columnas;
	escribir"";
	
	//copiamos el contenido a otra matriz y mostramos
	para i<-0 hasta filas-1 con paso 1 Hacer
		para j<-0 hasta columnas-1 con paso 1 hacer 
			matriz1[i,j]<- Azar(100);
			matriz2[i,j] <- matriz1[i,j];
			escribir sin saltar matriz2[i,j]," ";
		FinPara
		escribir "";
	FinPara
	escribir"";
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Capitulo 12 Modularidad

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


//Demostracion de como funciona

//PARAMETROS POR VALOR
//cualquier cambio del programa principal, lo sufre el subprograma
SubProceso aumento <- aumentar(num) //parametro
	definir aumento Como Entero;
	aumento <- num + 10; 
FinSubProceso

Proceso Modularidad_Parametros_Por_valor
	definir num,r Como Entero;
	Escribir sin saltar "Digite un número: ";
	leer num;
	
	//llamamos al parametro
		//r<- aumentar(num); //argumento
		//escribir "El aumento es: " , r;
	//otra forma seria:
	Escribir "El aumento es: ", aumentar(num);
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


//Demostracion de como funciona

//PARAMETROS POR VALOR
SubProceso aumento <- aumentar(num) //parametro
	definir aumento Como Entero;
	aumento<- num + 10;
FinSubProceso


//PARAMETROS POR REFERENCIA
SubProceso pedirDato(num por referencia) //parametro
	escribir Sin Saltar "Ingrese un número: ";
	leer num;
FinSubProceso
	
	
Proceso Modularidad_Parametros_Por_Referencia
	Definir num Como Entero;
	pedirDato(num); //argumento
	escribir "El aumento es: ", aumentar(num);//argumento
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


//Cap12_Ejercicio_1

//procedimiento para pedir nombre
SubProceso pedirDatos(nombre Por Referencia) //parametro
	escribir sin saltar "Digite su nombre: ";
	leer nombre;	
FinSubProceso

//procedimiento para poner el nombre entre asteriscos
SubProceso copiarNombre(nombre)
	definir tamanio,i Como Entero;
	tamanio<- Longitud(nombre);
	para i<-1 hasta tamanio con paso 1 hacer
		escribir Sin Saltar "*"; //primer fila de asteriscos
	FinPara
	Escribir "";
	escribir nombre;
	para i<-1 hasta tamanio con paso 1 hacer
		escribir Sin Saltar "*"; //segunda fila de asteriscos
	FinPara
	
FinSubProceso

Proceso Principal
	definir nombre Como Cadena;
	//pedimos el nombre
	pedirDatos(nombre); //Argumento
	// mostramos el nombre entre asteriscos
	copiarNombre(nombre);
	escribir"";
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Cap12_Ejercicio_2

Proceso Principal
	menu();
	Escribir '';
FinProceso

SubProceso menu()
	Definir opcion Como Entero;
	Definir num,exponente Como Real;
	Repetir
		Escribir 'Menu';
		Escribir '1. Potenciacion';
		Escribir '2. Raiz Cuadrada ';
		Escribir '3. Salir';
		Escribir 'Digite una opcion' Sin Saltar;
		Leer opcion;
		Escribir '';
		Segun opcion  Hacer
			1:
				Escribir 'Digite un numero: ' Sin Saltar;
				Leer num;
				Escribir 'Digite un exponenete';
				Leer exponente;
				Escribir 'La potencia es: ',potencia(num,exponente);
			2:
				Escribir 'Digite un numero' Sin Saltar;
				Leer num;
				Escribir 'La raiz cuadrada es: ',raizCuadrada(num);
			3:
			De Otro Modo:
				Escribir 'Opcion incorrecta, digite nuevamente';
		FinSegun
	Hasta Que opcion=3
FinSubProceso

SubProceso pot <- potencia(num,exponente)
	Definir pot Como Real;
	pot <- num ^ exponente;
FinSubProceso

SubProceso raiz_c <- raizCuadrada(num)
	Definir raiz_c Como Real;
	raiz_c <- rc(num);
FinSubProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Cap12_Ejercicio_3

Proceso principal
	menu();
	escribir"";
FinProceso

SubProceso menu()
	definir opcion Como Entero;
	definir pesos, dolares Como Real;
	Repetir
		escribir "Menu";
		Escribir "1. Cambiar Pesos a Dolares";
		escribir "2. Cambiar Dolares a Pesos";
		escribir "3. Salir";
		escribir "Digite una opcion del Menu";
		leer opcion;
		Escribir "";
		Segun opcion Hacer
			1:
				Escribir Sin Saltar "Digite la cantidad de Pesos";
				leer pesos;
				dolares<- cambioDolares(pesos); //argumento
				escribir "El cambio a dolares es: $",dolares;
			2:
				escribir Sin Saltar "Digite la cantidad de Dolares";
				leer dolares;
				pesos<- cambioPesos(dolares);
				escribir "El cambio a pesos es: $",pesos;
			3:
				
			De Otro Modo:
				escribir sin saltar "Opcion incorrecta,digite nuevamente";
		FinSegun
		escribir "";
	Hasta Que opcion = 3
	
FinSubProceso

SubProceso dolar <- cambioDolares(pesos) //parametro
	definir dolar Como Real;
	dolar <- pesos/500;
FinSubProceso

SubProceso pesos <- cambioPesos(dolares) 
	definir pesos Como Real;
	pesos <- dolares*500;
FinSubProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Cap12_Ejercicio_4
SubProceso pedirDatos(dolares por referencia) //parametro
	escribir Sin Saltar"Digite la cantidad de dolares: ";
	leer dolares;
FinSubProceso

SubProceso cambio(dolares,cien Por Referencia, cincuenta Por Referencia, veinte por referencia, diez Por Referencia, cinco Por Referencia, uno por referencia) //parametros
	cien <- trunc(dolares/100);
	dolares <- dolares mod 100;
	cincuenta <- trunc(dolares/50);
	dolares<- dolares mod 50;
	veinte <- trunc(dolares/20);
	dolares<- dolares mod 20;
	diez <- trunc(dolares/10);
	dolares<- dolares mod 10;
	cinco <- trunc(dolares/5);
	dolares <- dolares mod 5;
	uno <- dolares mod 5;
FinSubProceso

SubProceso mostrarDatos(dolares,cien,cincuenta,veinte,diez,cinco,uno)//parametro
	escribir "";
	escribir "La cantidad de billetes necesarios es: ";
	escribir "cien: ",cien;
	escribir "cincuenta: ",cincuenta;
	escribir "veinte: ",veinte;
	escribir "diez: ",diez;
	escribir "cinco: ",cinco;
	escribir "uno: ",uno;
FinSubProceso


Proceso principal
	definir dolares Como Real;
	definir cien,cincuenta,veinte,diez,cinco,uno Como Entero;
	
	//pedimos la cantidad de dolares
	pedirDatos(dolares);//argumento
	//convertimos a billetes
	cambio(dolares,cien,cincuenta,veinte,diez,cinco,uno); //argumento
	//mostramos los datos
	mostrarDatos(dolares,cien,cincuenta,veinte,diez,cinco,uno);//argumento
	
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Cap12_Ejercicio_5

Proceso principal
	definir apellidos como cadena;
	Dimension apellidos[5];
	//pedimos los appellidos
	pedirDatos(apellidos); //argumento
	//ordenamos los apellidos
	ordenar(apellidos); //argumento
	//mostramos los datos
	mostrarDatos(apellidos); //argumento
FinProceso

//pedimos los apellidos
SubProceso pedirDatos(apellidos Por Referencia) //parametro
	Definir i Como Entero;
	para i<-0 hasta 4 con paso 1 Hacer
		escribir sin saltar (i+1)," Digite un apellido";
		leer apellidos[i];
	FinPara
FinSubProceso

//ordenamos los apellidos
SubProceso ordenar(apellidos por referencia) //parametro
	definir i,j Como Entero;
	Definir aux Como Cadena;
	para i<-0 hasta 3 con paso 1 Hacer
		Para j<-0 hasta 3 con paso 1 Hacer
			si apellidos[j]> apellidos[j+1] Entonces
				aux<- apellidos[j];
				apellidos[j]<- apellidos[j+1];
				apellidos[j+1]<- aux;
			FinSi
		FinPara
	FinPara
FinSubProceso

//mostramos los datos 
SubProceso mostrarDatos(apellidos) //parametro
	definir i Como Entero;
	escribir"";
	Escribir "Los apellidos ordenados alfabeticamente son: ";
	para i<-0 hasta 4 con paso 1 Hacer
		escribir (i+1)," ",apellidos[i];
	FinPara
FinSubProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Cap12_Ejercicio_6

Proceso Principal
	definir opcion Como Entero;
	definir matriz Como Real;
	Dimension matriz[4,4];
	
	Repetir
		Escribir "Menu";
		escribir "1. Llenar una matriz de 4*4";
		escribir "2. Mostrar la matriz";
		escribir "3. Sumar todos los elementos de la matriz";
		escribir "4. Saltar";
		Escribir sin saltar "Digite la opcion de menu";
		leer opcion;
		escribir "";
		Segun opcion Hacer
			1:
				llenarMatriz(matriz); //argumento
			2:
				mostrarMatriz(matriz); //argumento
			3:
				escribir"La suma es: ",sumarMatriz(matriz); //argumento
			4:
				
			De Otro Modo:
				escribir "Opcion incorrecta, igrese una opcion valida";
		FinSegun
		escribir "";
	Hasta Que opcion = 4
FinProceso


SubProceso llenarMatriz(matriz Por Referencia) //parametro
		definir i,j Como Entero;
		para i<-0 Hasta 3 con paso 1 Hacer
			para j<-0 Hasta 3 con paso 1 Hacer
				escribir sin saltar "Digite un numero [",i,"][",j,"]";
				leer matriz[i,j];
			FinPara
		FinPara
FinSubProceso

SubProceso mostrarMatriz(matriz) //parametro
	definir i,j Como Entero;
	para i<-0 Hasta 3 con paso 1 Hacer
		para j<-0 Hasta 3 con paso 1 Hacer
			escribir Sin Saltar matriz[i,j]," ";
		FinPara
		Escribir "";
	FinPara
FinSubProceso
	
SubProceso suma <- sumarMatriz(matriz) //parametro
	definir i,j como enteros;
	definir suma Como Real;
	suma<-0;
	para i<-0 Hasta 3 con paso 1 Hacer
		para j<-0 Hasta 3 con paso 1 Hacer
			suma <- suma + matriz[i,j];
		FinPara
	FinPara
FinSubProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Cap12_Ejercicio_7
SubProceso pedirDatos(base Por Referencia, exponente Por Referencia)//parametro
	Escribir Sin Saltar"Digite una base: ";
	leer base;
	Escribir Sin Saltar"Digite un exponente: ";
	leer exponente;
FinSubProceso

Funcion  retorno <- potencia(base,exponente)//parametro
	definir retorno Como Entero;
	//caso base
	si exponente = 0 Entonces
		retorno <- 1;
	//caso recursivo
	SiNo
		retorno <- base * potencia(base,exponente-1); //Argumento
	FinSi
FinFuncion

Proceso Principal
	definir base, exponente Como Entero;
	//pedimos los datos}
	pedirDatos(base,exponente); //argumento
	//llamamos a la Funcion 
	escribir "La potencia es: ", potencia(base,exponente); //argumento
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Cap12_Ejercicio_8
SubProceso pedirDatos(nElementos Por Referencia)
	escribir sin saltar "Digite el numero de elementos: ";
	leer nElementos;
FinSubProceso

subproceso mostrarSerie(nElementos)//parametro
	definir i Como Entero;
	escribir "";
	escribir "La serie fibonacci es";
	escribir sin saltar "0 ";
	para i<-1 hasta nElementos-1 con paso 1 Hacer
		Escribir Sin Saltar fibonacci(i)," "; //argumentos
	FinPara
	Escribir "";
FinSubProceso

SubProceso retorno <- fibonacci(num) //parametro
	definir retorno Como Entero;
	si num=1 o num=2 Entonces
		//caso base
		retorno<- 1;
	SiNo
		//caso recursivo
		retorno<- fibonacci(num-1) + fibonacci(num-2); //argumentos
	FinSi
FinSubProceso


Proceso Principal
	definir nElementos Como Entero;
	//pedimos los elementos
	pedirDatos(nElementos);
	//mostramos la serie
	mostrarSerie(nElementos);
FinProceso


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Cap12_Ejercicio_9

SubProceso pedirDatos(num Por Referencia)
	Escribir Sin Saltar "Ingrese un numero";
	leer num;
FinSubProceso

SubProceso retorno<- sumarDigitos(num)
	definir retorno Como Entero;
	si num = 0 Entonces
		//caso base
		retorno <- num;
	SiNo
		//caso recursivo
		retorno <- sumarDigitos(trunc(num/10)) + (num mod 10);
	FinSi
	
FinSubProceso

Proceso Principal
	definir num Como Entero;
	//pedimos el numero
	pedirDatos(num);
	// sumamos los digitos
	escribir "La suma es: ", sumarDigitos(num);
FinProceso
